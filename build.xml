<project name="eoi-agents" default="dist" xmlns:ivy="antlib:org.apache.ivy.ant" basedir=".">
    <!-- import properties -->
    <property file="build.properties" />
    
    
    <!-- paths used for compilation and run  -->
    <path id="lib.path.id">
        <fileset dir="${lib.dir}" />
	</path>
    <path id="run.path.id">
    	<path refid="lib.path.id" />
        <path location="${build.dir}/" />
    </path>
    
    <!-- ================================= 
          target: resolve
          NOTE: may want this to depends="clean" because when a dependency is removed,
          the jar(s) are not removed from the 'lib' directory after re-running 'ant resolve'
         ================================= -->
    <target name="resolve" description="--> Retreive dependencies with ivy">
        <ivy:retrieve/>
    </target>    
    
    <!-- ================================= 
          target: report-deps              
         ================================= -->
    <target name="report-deps" depends="resolve" description="--> Generates a report of dependencies">
        <ivy:report todir="${ivy-report.dir}"/>
    </target>

    <!-- ================================= 
          target: compile
         ================================= -->
    <target name="compile" depends="resolve" description="--> Compile the project">
        <mkdir dir="${build.dir}" />
        <javac srcdir="${src.dir}" destdir="${build.dir}" >
        	<classpath refid="lib.path.id" />
        </javac>
        <!-- copy the resources directory -->
        <mkdir dir="${build.dir}/resources" />
        <copy todir="${build.dir}/resources">
        	<fileset dir="${src.dir}/resources"/>
        </copy>
        <!-- copy the log4j.properties file -->
        <copy file="${src.dir}/log4j.properties" todir="${build.dir}" />
    </target>
    
	<!-- ================================= 
          target: test-all
         ================================= -->
	<target name="test-all" description="--> Runs all tests">
		<antcall target="test-sos"/>
		<antcall target="test-usgs"/>
		<antcall target="test-ncagent"/>
	</target>

	<!-- ================================= 
          target: test-sos
         ================================= -->
    <target name="test-sos" depends="compile" description="--> Runs a canned sos test">
    	<property name="msg" value="Testing SosAgent..."/>
        <java classpathref="run.path.id" classname="net.ooici.eoi.datasetagent.impl.SosAgent" />
    </target>
    
	<!-- ================================= 
          target: test-usgs
         ================================= -->
    <target name="test-usgs" depends="compile" description="--> Runs a canned usgs test">
    	<property name="msg" value="Testing UsgsAgent..."/>
        <java classpathref="run.path.id" classname="net.ooici.eoi.datasetagent.impl.UsgsAgent" />
    </target>
    
	<!-- ================================= 
          target: test-ncagent
         ================================= -->
    <target name="test-ncagent" depends="compile" description="--> Runs a canned netcdf test">
    	<property name="msg" value="Testing NcAgent..."/>
        <java classpathref="run.path.id" classname="net.ooici.eoi.datasetagent.impl.NcAgent" />
    </target>

    <!-- ================================= 
          target: clean              
         ================================= -->
    <target name="clean" description="--> Clean the project">
    	<delete dir="${build.dir}" />
    	<delete dir="${lib.dir}" />
    	<delete dir="${dist.dir}" />
    	<delete dir="${docs.dir}" />
    	<delete dir="${ivy-report.dir}" />
    </target>
	
    <!-- ================================= 
          target: clean-ivy-cache              
         ================================= -->
	<target name="clean-ivy-cache" description="--> Clean the ivy cache">
		<ivy:cleancache />
	</target>
	
	<!-- ================================= 
          target: deep-clean
         ================================= -->
    <target name="deep-clean" description="--> Cleans both this directory and the ivy cache">
    	<antcall target="clean" />
    	<antcall target="clean-ivy-cache" />
	</target>
	
	<!-- ================================= 
          target: javadoc              
         ================================= -->
	<target name="javadoc" depends="" description="--> Generate Javadoc">
		<javadoc packagenames="net.*"
		   sourcepath="${src.dir}"
			classpathref="run.path.id"
		   defaultexcludes="yes"
		   destdir="${docs.dir}"
		   author="true"
		   version="true"
		   use="true"
		   windowtitle="ION Core">
			<doctitle><![CDATA[<h1>ION Core</h1>]]></doctitle>
			<bottom><![CDATA[<i>Copyright &#169; 2010 UC Regents. All Rights Reserved.</i>]]></bottom>
			<tag name="todo" scope="all" description="To do:"/>
		</javadoc>
	</target>
	
	<!-- ================================= 
          target: dist              
         ================================= -->
	<target name="dist" depends="clean,compile,javadoc" description="--> Package Distribution">
	    <!-- Create the distribution directory -->
	    <mkdir dir="${dist.dir}" />
	    <mkdir dir="${dist.dir}/lib"/>
	    <mkdir dir="${dist.dir}/docs"/>

	    <!-- Create JAR file with library classes, tests and example code -->
	    <jar jarfile="${dist.dir}/lib/${projname}-full-${version}.jar" basedir="${build.dir}"/>

	    <!-- Create JAR file with all library classes -->
		<jar jarfile="${dist.dir}/lib/${projname}-${version}.jar" 
	    	basedir="${build.dir}"
	    	excludes="ion/example/**"
		/>

	    <!-- Create ZIP file with the javadoc -->
		<zip destfile="${dist.dir}/docs/${projname}-${version}-javadoc.zip"
			basedir="${docs.dir}"
		/>		

		<!-- Create ZIP file for the entire directory -->
		<zip destfile="${dist.dir}/${projname}-archive.zip"
			basedir="."
			excludes="${dist.dir}/${projname}-archive.zip,${build}/**,.git/**"
		/>		
	</target>
</project>